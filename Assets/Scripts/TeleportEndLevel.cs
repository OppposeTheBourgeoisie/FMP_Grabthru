using UnityEngine;
using System.Collections;
using UnityEngine.SceneManagement;
using TMPro;
using UnityEngine.UI;

public class TeleportEndLevel : MonoBehaviour
{
    public GameObject menuUI;
    public TMP_Text performanceText;
    public Button nextLevelButton;
    public Button mainMenuButton;

    private bool isTeleporting = false;

    private PlayerShmove playerMovement;
    private CameraController cameraController;

    private void Start()
    {
        // Hide the menu and setup button listeners
        menuUI.SetActive(false);
        nextLevelButton.onClick.AddListener(GoToNextLevel);
        mainMenuButton.onClick.AddListener(GoToMainMenu);

        playerMovement = FindObjectOfType<PlayerShmove>();
        cameraController = FindObjectOfType<CameraController>();
    }

    private void OnTriggerEnter(Collider other)
    {
        // Show menu and stop timer when player enters trigger
        if (other.CompareTag("Player") && !isTeleporting)
        {
            isTeleporting = true;
            Timer.Instance.StopTimer();
            DisplayMenu(other);
        }
    }

    private void DisplayMenu(Collider player)
    {
        // Formatting was generated by AI
        // Show performance, unlock cursor, and disable controls
        float finalTime = Timer.Instance.GetElapsedTime();
        int minutes = Mathf.FloorToInt(finalTime / 60);
        int seconds = Mathf.FloorToInt(finalTime % 60);
        int milliseconds = Mathf.FloorToInt((finalTime * 100) % 100);

        string performance = string.Format("Level Completed!\nTime: {0:00}:{1:00}:{2:00}", minutes, seconds, milliseconds);
        performanceText.text = performance;
        menuUI.SetActive(true);

        if (playerMovement != null)
            playerMovement.enabled = false;
        if (cameraController != null)
            cameraController.enabled = false;

        Cursor.lockState = CursorLockMode.None;
        Cursor.visible = true;

        nextLevelButton.interactable = true;
        mainMenuButton.interactable = true;
    }

    private void GoToNextLevel()
    {
        // Load the next scene if available
        Cursor.lockState = CursorLockMode.Locked;
        Cursor.visible = false;

        int currentSceneIndex = SceneManager.GetActiveScene().buildIndex;
        int nextSceneIndex = currentSceneIndex + 1;

        if (nextSceneIndex < SceneManager.sceneCountInBuildSettings)
        {
            SceneManager.LoadScene(nextSceneIndex);
        }
    }

    private void GoToMainMenu()
    {
        // Load the main menu scene
        SceneManager.LoadScene("MainMenu");
    }
}
